{"version":3,"sources":["component/ValueBox.js","api/covid-19.js","component/ValueBoxGroup.js","component/App.js","index.js"],"names":["ValueBox","props","dayjs","de","color","this","cases7Per100k","Statistic","size","Label","city","lastUpdated","format","Value","Math","round","React","Component","httpClient","axios","create","baseURL","params","get","ValueBoxGroup","handleClick","queryApi","state","essen","krefeld","solingen","setInterval","forEach","URLSearchParams","trackPromise","api","then","response","data","records","fields","updatedCity","cases7_per_100k","last_update","setState","catch","error","console","mainContent","promiseInProgress","Dimmer","active","inverted","Loader","className","Grid","Row","Column","Container","Header","as","dividing","Button","icon","title","onClick","Icon","name","promiseTrackerHoc","App","style","margin","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.787edf7a.chunk.js","sourcesContent":["import React from \"react\";\nimport { Statistic } from 'semantic-ui-react'\nimport * as dayjs from 'dayjs'\nimport de from 'dayjs/locale/de'\n\nexport default class ValueBox extends React.Component {\n    constructor(props) {\n      super(props);\n      dayjs.locale('de-german', de)\n    }\n\n    render() {\n      let color = 'green';\n      if (this.props.cases7Per100k >= 200) {\n        color = 'red';\n      } else if (this.props.cases7Per100k >= 100) {\n        color = 'orange';\n      }\n      return (\n        <Statistic size='huge' color={color}>\n          <Statistic.Label>{this.props.city}</Statistic.Label>\n          <p>Daten vom: {this.props.lastUpdated === \"\" ? \"unbekannt\" : dayjs(this.props.lastUpdated).format('dd. DD.MM.YYYY')}</p>\n          <Statistic.Value>{Math.round(this.props.cases7Per100k)}</Statistic.Value>\n        </Statistic>\n      );\n    }\n}\n","import axios from 'axios'\n\n// https://public.opendatasoft.com/explore/dataset/covid-19-germany-landkreise/api\nconst httpClient = axios.create({\n    baseURL: 'https://public.opendatasoft.com/api/records/1.0/search/'\n})\n\nexport default {\n  getCasesForOneWeek: params => httpClient.get('?dataset=covid-19-germany-landkreise', { params })\n}\n","import React from \"react\";\nimport { trackPromise, promiseTrackerHoc } from 'react-promise-tracker';\nimport { Container, Dimmer, Loader, Button, Icon, Grid, Header } from 'semantic-ui-react'\nimport ValueBox from \"./ValueBox\";\nimport api from '../api/covid-19'\n\nclass ValueBoxGroup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      essen: {\n        lastUpdated: \"\",\n        cases7Per100k: 0\n      },\n      krefeld: {\n        lastUpdated: \"\",\n        cases7Per100k: 0\n      },\n      solingen: {\n        lastUpdated: \"\",\n        cases7Per100k: 0\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.queryApi();\n    setInterval(() => this.queryApi(), 1000 * 60 * 60 * 6)\n  }\n\n  queryApi() {\n    const cities = [\"essen\", \"krefeld\", \"solingen\"];\n    cities.forEach ((city) => {\n      const params = new URLSearchParams([['q', city]]);\n      trackPromise(\n        api.getCasesForOneWeek(params).then(response => response.data.records[0].fields)\n          .then((data) => {\n            let updatedCity = {};\n            updatedCity.cases7Per100k = data.cases7_per_100k;\n            updatedCity.lastUpdated = data.last_update;\n            this.setState({ [`${city}`]: updatedCity })\n          })\n          .catch(error => {\n            console.error(error)\n          })\n      );\n  })}\n\n  handleClick = () => {\n    this.queryApi();\n  };\n\n  render() {\n    let mainContent;\n    if (this.props.promiseInProgress) {\n      mainContent = <div>\n        <Dimmer active inverted>\n          <Loader inverted size='large'>Wird geladen</Loader>\n        </Dimmer>\n      </div>;\n    } else {\n      mainContent = <div className='ui centered grid'>\n          <Grid>\n            <Grid.Row>\n              <Grid.Column>\n                <ValueBox city=\"Essen\" cases7Per100k={this.state.essen.cases7Per100k} lastUpdated={this.state.essen.lastUpdated}/>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column>\n                <ValueBox city=\"Krefeld\" cases7Per100k={this.state.krefeld.cases7Per100k} lastUpdated={this.state.krefeld.lastUpdated}/>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column>\n              <ValueBox city=\"Solingen\" cases7Per100k={this.state.solingen.cases7Per100k} lastUpdated={this.state.solingen.lastUpdated}/>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n      </div>\n    }\n    \n    return (\n      <Container>\n        <Header as='h1'>COVID-19-Erkrankung</Header>\n        <Header as='h5' dividing>pro 100.000 Einwohner in den letzten 7 Tagen</Header>\n        <Button icon className=\"ui right floated button\" title=\"aktualisieren\" onClick={this.handleClick}>\n          <Icon name=\"refresh\" />\n        </Button>\n        {mainContent}\n        </Container>\n      )\n    };\n}\n\nexport default promiseTrackerHoc(ValueBoxGroup);\n","import React from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport ValueBoxGroup from \"./ValueBoxGroup\";\n\nexport default class App extends React.Component {\n    render() {\n      return (\n        <Container style={{ margin: 20 }}>\n          <ValueBoxGroup />\n        </Container>\n      );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport App from \"./component/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}